<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on SlipBox</title><link>https://suguni.github.io/tags/rust/</link><description>Recent content in rust on SlipBox</description><generator>Hugo -- gohugo.io</generator><language>ko</language><copyright>ysk</copyright><lastBuildDate>Wed, 05 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://suguni.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Iterator, IntoIterator, Iter, IterMut, IntoIter, iter, iter_mut, into_iter</title><link>https://suguni.github.io/posts/rust-iterator/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://suguni.github.io/posts/rust-iterator/</guid><description>처음 rust 를 배우기 시작 했을때 Iterator 는 다른 언어들에서도 쉽게 봐왔던거라 어렵지 않게 넘어갔었는데, 이후 여러 코드를 보면 볼수록 정확히 모르고 있구나 라고 생각되던 상황에 Rust Stream: Iterators 동영상을 보고 나름 개념정리가 된 듯 하여 글로 작성해 둔다.
Iterator trait 은 잘 알려진 반복자 디자인 패턴의 그 iterator 이다. Iterator trait 에는 아주 많은 함수가 있는데, 필수 구현해야 하는 함수는 fn next(&amp;amp;mut self) -&amp;gt; Option&amp;lt;Item&amp;gt; 하나이다. Option 타입을 반환하니 has_next() 같은 함수가 필요 없다.</description></item></channel></rss>